{
  "name": "Ember Form Object",
  "tagline": "Form object pattern in ember apps",
  "body": "# Ember Form Object\r\n\r\n[![Build Status](https://semaphoreci.com/api/v1/ilucin/ember-form-object/branches/master/shields_badge.svg)](https://semaphoreci.com/ilucin/ember-form-object)\r\n[![Code Climate](https://codeclimate.com/github/infinum/ember-form-object/badges/gpa.svg)](https://codeclimate.com/github/infinum/ember-form-object)\r\n[![Ember Observer Score](https://emberobserver.com/badges/ember-form-object.svg)](https://emberobserver.com/addons/ember-form-object)\r\n[![npm version](https://badge.fury.io/js/ember-form-object.svg)](http://badge.fury.io/js/ember-form-object)\r\n\r\nForm object pattern in Ember apps (similar to ActiveModel Form Objects in Ruby on Rails)\r\n\r\n## Features\r\n\r\n* Declarative validations (depends on [ember-validations](https://github.com/DockYard/ember-validations) under the hood)\r\n* Merge client & server side validation errors\r\n* Properties proxied to / synced from model\r\n* Virtual & async properties\r\n* Well defined form save (submit) process with appropriate hooks\r\n* Manage form \"dirty\", \"loaded\", \"submiting\" and \"valid\" state\r\n* Prevent form loss with confirmation when leaving dirty form\r\n* Add/remove properties in runtime (useful for dynamic forms)\r\n* Detect model property conflicts while form is being edited (dirty)\r\n\r\n## Installation\r\n\r\n```javascript\r\nember install ember-form-object\r\n```\r\n\r\n## Example usage\r\n\r\n##### Form object for todo model\r\n```javascript\r\n// app/forms/todo.js\r\n\r\nimport Ember from 'ember';\r\nimport ModelFormObject from 'ember-form-object/forms/model-form';\r\n\r\nexport default ModelFormObject.extend({\r\n  properties: {\r\n    'title': { validate: { presence: true } },\r\n    'completed': {},\r\n    'assignee': {},\r\n    'subscribers': { async: true },\r\n    'description': { virtual: true, validate: { presence: true } },\r\n    'people': { virtual: true, async: true }\r\n  },\r\n\r\n  setDescription() {\r\n    return this.get('model.description');\r\n  },\r\n\r\n  syncDescription() {\r\n    const parsedDescription = Ember.String.capitalize(this.get('description').trim());\r\n    this.set('model.description', parsedDescription);\r\n  },\r\n\r\n  beforeSubmit() {\r\n    this._super(...arguments);\r\n  },\r\n\r\n  afterSubmit() {\r\n    this._super(...arguments);\r\n    this.set('description', this.setDescription());\r\n  }\r\n});\r\n```\r\n\r\n##### Route with form route mixin (which instantiates todo form object)\r\n```javascript\r\nimport Ember from 'ember';\r\nimport FormRouteMixin from 'ember-form-object/mixins/form-route';\r\n\r\nexport default Ember.Route.extend(FormRouteMixin, {\r\n  formName: 'todo',\r\n\r\n  model(params) {\r\n    return this.store.peekRecord('todo', params.id);\r\n  },\r\n\r\n  afterModel() {\r\n    this._super(...arguments);\r\n    this.set('form.people', this.store.peekAll('user'));\r\n  },\r\n\r\n  actions: {\r\n    saveModelForm() {\r\n      this.get('form').save();\r\n      // .then() => form saved\r\n      // .catch() => validation probably failed\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n##### Non-model form object usage (login form)\r\n```javascript\r\nimport Ember from 'ember';\r\nimport BaseForm from 'ember-form-object/forms/base-form';\r\n\r\nexport default BaseForm.extend({\r\n  properties: {\r\n    'email': {\r\n      value: '',\r\n      validate: { presence: true }\r\n    },\r\n    'password': {\r\n      value: '',\r\n      validate: { presence: true }\r\n    },\r\n    'rememberMe': {\r\n      value: false\r\n    }\r\n  },\r\n\r\n  submit() {\r\n    const credentials = this.getProperties('email', 'password');\r\n    // This is mocked, you should actually login here :)\r\n    return new Ember.RSVP.Promise((resolve) => setTimeout(() => resolve(credentials), 1000));\r\n  }\r\n});\r\n\r\n```\r\n\r\n## Disclaimer\r\n\r\nThis project is currently in **alpha** state. Public API of the library is still under active development.\r\n\r\n## Development\r\n\r\n### TODOs (by priority)\r\n* Add \"isValid\" state to each property\r\n* Example page & docs\r\n* Remove lodash dependency\r\n* Better test coverage\r\n* Remove form-loss feature from route mixin and just add it as an example\r\n* Add blueprints for ember-cli\r\n\r\n### Setup development environment\r\n\r\n* `git clone` this repository\r\n* `npm install`\r\n* `bower install`\r\n\r\n### Running dummy app\r\n\r\n* `ember server`\r\n* Visit your app at http://localhost:4200.\r\n\r\n### Running Tests\r\n\r\n* `npm test` (Runs `ember try:testall` to test your addon against multiple Ember versions)\r\n* `ember test`\r\n* `ember test --server`\r\n\r\n## Authors ##\r\n\r\n* [Ivan Luƒçin](http://github.com/ilucin)\r\n* [Jan Varljen](http://github.com/janvarljen)\r\n\r\n## Want to help? ##\r\n\r\nContributors welcome.\r\n\r\n## Legal ##\r\n\r\n[Infinum LTD](http://infinum.co) &copy; 2016\r\n\r\n[@infinumco](http://twitter.com/infinumco)\r\n\r\n[Licensed under the MIT license](http://www.opensource.org/licenses/mit-license.php)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}